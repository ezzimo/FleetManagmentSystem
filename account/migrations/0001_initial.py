# Generated by Django 3.1.2 on 2021-08-29 16:57

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(max_length=150, unique=True, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=150, unique=True, verbose_name='Last Name')),
                ('mobile', models.CharField(blank=True, max_length=150, verbose_name='Mobile Number')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff')),
                ('is_driver', models.BooleanField(default=False, verbose_name='Is Driver')),
                ('is_customer', models.BooleanField(default=False, verbose_name='Is Customer')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.user')),
                ('company_name', models.CharField(max_length=150, unique=True, verbose_name='Company Name')),
                ('ice', models.PositiveIntegerField(blank=True, null=True, unique=True, verbose_name='ICE of the Company')),
                ('website', models.CharField(max_length=150, unique=True, verbose_name='Company website')),
                ('mobile_2', models.CharField(blank=True, max_length=150, verbose_name='Mobile Number')),
                ('landline', models.CharField(blank=True, max_length=150, verbose_name='Landline Number')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
            bases=('account.user',),
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.user')),
                ('registration_number', models.PositiveSmallIntegerField(unique=True, verbose_name='Driver Registration Number')),
                ('cni', models.CharField(max_length=8, unique=True, verbose_name='National Identity Code')),
                ('picture', models.ImageField(help_text='Driver Identity Picture', upload_to='images/driver/', verbose_name='Driver Pic')),
                ('birth_date', models.DateField(verbose_name='Date Birth of the Driver')),
                ('birth_city', models.CharField(blank=True, max_length=150, verbose_name='Birth City of the Driver')),
                ('cnss_registration_number', models.PositiveIntegerField(unique=True, verbose_name='CNSS Registration Number')),
                ('driving_licence', models.ImageField(help_text='Driver Licence Picture', upload_to='images/driver_licence/', verbose_name='Driver Licence')),
                ('driver_licence_expiration_date', models.DateField(verbose_name='Expiration Date for Driver Licence')),
                ('glasses', models.BooleanField(default=False, verbose_name='if the Driver use Glasses')),
                ('glasses_certificat', models.ImageField(help_text='Driver Glasses Certificat Picture', upload_to='images/driver_glasse_certificate/', verbose_name='Driver Glasse Certificate')),
                ('recruitment_date', models.DateField(blank=True, null=True)),
                ('Contract_type', models.CharField(choices=[('Tem.', 'Temporaire'), ('Per.', 'Permanent')], default='Per.', max_length=4)),
                ('payment_mode', models.CharField(choices=[('Vir', 'Virement'), ('Esp', 'Especes')], default='Vir', max_length=3)),
                ('rib_bank', models.PositiveIntegerField(verbose_name='RIB of the Driver Bank')),
                ('bank_address', models.CharField(blank=True, max_length=100)),
                ('bank_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.bank')),
            ],
            options={
                'verbose_name': 'Driver',
                'verbose_name_plural': 'Drivers',
            },
            bases=('account.user',),
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=128)),
                ('region_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.region')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeSalary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Employee Salary')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.driver')),
            ],
            options={
                'verbose_name': 'Salary',
                'verbose_name_plural': 'Salaris',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='driver',
            name='city_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.city'),
        ),
        migrations.AddField(
            model_name='driver',
            name='region_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.region'),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=50, verbose_name='Phone Number')),
                ('postcode', models.CharField(max_length=50, verbose_name='Postcode')),
                ('address_line_1', models.CharField(max_length=255, verbose_name='Address Line 1')),
                ('address_line_2', models.CharField(max_length=255, verbose_name='Address Line 2')),
                ('town_city', models.CharField(max_length=150, verbose_name='Town/City/State')),
                ('delivery_instructions', models.CharField(max_length=255, verbose_name='Delivery Instructions')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('default', models.BooleanField(default=False, verbose_name='Default')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.customer', verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
    ]
